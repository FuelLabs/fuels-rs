src/SUMMARY.md

src/wallets/kms-wallets.md
src/wallets/access.md
src/wallets/encrypting-and-storing.md
src/wallets/test-wallets.md
src/wallets/private-keys.md
src/wallets/checking-balances-and-coins.md
src/wallets/signing.md
src/wallets/mnemonic-wallet.md
src/wallets/index.md



put this somewhere:
## Account impersonation

To facilitate account impersonation, the Rust SDK provides the `ImpersonatedAccount` struct. Since it implements `Account`, we can use it to simulate ownership of assets held by an account with a given address. This also implies that we can impersonate contract calls from that address. `ImpersonatedAccount` will only succeed in unlocking assets if the network is set up with `utxo_validation = false`.

```rust,ignore
{{#include ../../examples/contracts/src/lib.rs:contract_call_impersonation}}
```
