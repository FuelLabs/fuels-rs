# Transfer all assets

The `transfer()` method lets you transfer a single asset, but what if you needed to move all of your assets to a different wallet? You could repeatably call `transfer()`, initiating a transaction each time, or you bundle all the transfers into a single transaction. This chapter guides you through crafting your custom transaction for transferring all assets owned by a wallet.

Lets quickly go over the setup:

```rust,ignore
{{#include ../../../examples/cookbook/src/lib.rs:transfer_multiple_setup}}
```

Similar to the previous example, we set up two custom wallets with some randomly generated assets. As a side effect, `wallet_2` will be initialized with the same assets as `wallet_1`, but this has no impact on our experiment.

Transactions require us to define input and output coins. Let's assume we do not know the assets owned by `wallet_1`. We retrieve its balances, i.e. tuples consisting of a string representing the asset id and the respective amount. This lets us use the helpers `get_asset_inputs_for_amount()`, `get_asset_outputs_for_amount()` to create the appropriate inputs and outputs:

```rust,ignore
{{#include ../../../examples/cookbook/src/lib.rs:transfer_multiple_inout}}
```

All that is left is to build the transaction with the provider helper `build_transfer_transaction()`, have `wallet_1` sign over it, and we can send it. Checking that the wallets balances are empty lets us confirm that we have indeed transferred all assets:

```rust,ignore
{{#include ../../../examples/cookbook/src/lib.rs:transfer_multiple_transaction}}
```
