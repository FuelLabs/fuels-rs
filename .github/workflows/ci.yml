name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  DASEL_VERSION: https://github.com/TomWright/dasel/releases/download/v2.3.6/dasel_linux_amd64
  RUSTFLAGS: "-D warnings"
  FUEL_CORE_VERSION: 0.26.0
  FUEL_CORE_PATCH_BRANCH:
  RUST_VERSION: 1.76.0
  FORC_VERSION: 0.59.0
  FORC_PATCH_BRANCH: ""
  FORC_PATCH_REVISION: ""
  NEXTEST_HIDE_PROGRESS_BAR: "true"
  NEXTEST_STATUS_LEVEL: "fail"

jobs:
  compile_sway_projects:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
        # selecting a toolchain either by action or manual `rustup` calls should happen
        # before the cache plugin, as it uses the current rustc version as its cache key
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v1-rust"

      - name: Set git config
        run: |
          git config --global core.bigfilethreshold 100m

      - name: Install forc and forc-fmt
        run: |
          if [[ -n $FORC_PATCH_BRANCH ]]; then
            cargo install --locked forc forc-fmt --git https://github.com/FuelLabs/sway --branch $FORC_PATCH_BRANCH
          elif [[ -n $FORC_PATCH_REVISION ]]; then
            cargo install --locked forc forc-fmt --git https://github.com/FuelLabs/sway --rev $FORC_PATCH_REVISION
          else
            curl -sSLf https://github.com/FuelLabs/sway/releases/download/v${{ env.FORC_VERSION }}/forc-binaries-linux_amd64.tar.gz -L -o forc.tar.gz
            tar -xvf forc.tar.gz
            chmod +x forc-binaries/forc
            mv forc-binaries/forc /usr/local/bin/forc
            mv forc-binaries/forc-fmt /usr/local/bin/forc-fmt
          fi

      - name: Check format of Sway test projects
        run: forc fmt --check --path e2e

      - name: Build Sway test projects
        run: forc build --release --terse --error-on-warnings --path e2e

      - uses: actions/upload-artifact@v4
        with:
          retention-days: 2
          name: sway-examples
          path: |
            e2e/sway/**/out/*

      # TODO: To be removed once https://github.com/FuelLabs/fuels-rs/issues/881 is unblocked.
      - name: Build Sway test projects w type paths
        run: forc build --release --terse --error-on-warnings --json-abi-with-callpaths --path e2e

      - uses: actions/upload-artifact@v4
        with:
          retention-days: 2
          name: sway-examples-w-type-paths
          path: |
            e2e/sway/**/out/*

  build-checks-binary:
      runs-on: ubuntu-latest
      outputs:
        config: ${{ steps.generate-config.outputs.config }}
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Install toolchain
          uses: dtolnay/rust-toolchain@master
          with:
            toolchain: ${{ env.RUST_VERSION }}

        - uses: Swatinem/rust-cache@v2
          with:
            prefix-key: "v1-rust"

        - name: Build checks binary
          run: cargo build --package checks --bin checks

        - name: Upload checks binary
          uses: actions/upload-artifact@v4
          with:
            name: checks-binary
            path: target/debug/checks

        - name: Generate config
          id: generate-config
          run: |
            EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
            echo "config<<$EOF" >> "$GITHUB_OUTPUT"
            ./target/debug/checks -r . --print-ci-jobs-desc >> "$GITHUB_OUTPUT"
            echo "$EOF" >> "$GITHUB_OUTPUT"

  verify-rust-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Ensure CI is using the same minimum toolchain specified in fuels Cargo.toml
      - run: |
          curl -sSLf "$DASEL_VERSION" -L -o dasel && chmod +x dasel
          mv ./dasel /usr/local/bin/dasel
          MIN_VERSION=$(cat Cargo.toml | dasel -r toml 'workspace.package.rust-version' -w plain)
          RUST_VERSION="${{ env.RUST_VERSION }}"
          echo "Comparing minimum supported toolchain ($MIN_VERSION) with ci toolchain (RUST_VERSION)"
          test "$MIN_VERSION" == "$RUST_VERSION"

  # Ensure workspace is publishable
  publish-crates-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Publish crate check
        uses: xgreenx/publish-crates@v1
        with:
          dry-run: true
          check-repo: false
          ignore-unpublished-changes: true

  cargo-verifications:
    needs:
      - compile_sway_projects
      - verify-rust-version
      - build-checks-binary
      - publish-crates-check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: ${{fromJSON(needs.build-checks-binary.outputs.config)}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Rust toolchain
        if: ${{ matrix.config.deps.rust && matrix.config.deps.rust.nightly == false }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: ${{ matrix.config.deps.rust.components || '' }}

      - name: Install Rust nightly toolchain
        if: ${{ matrix.config.deps.rust && matrix.config.deps.rust.nightly == true }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: ${{ matrix.config.deps.rust.components || '' }}

      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the cache plugin, as it uses the current rustc version as its cache key
      - uses: Swatinem/rust-cache@v2.0.1
        continue-on-error: true
        with:
          key: "${{ matrix.config.tasks }}"

      - name: Install Fuel Core
        if: ${{ matrix.config.deps.fuel_core_binary }}
        run: |
          if [[ -n $FUEL_CORE_PATCH_BRANCH ]]; then
            cargo install --locked fuel-core-bin --git https://github.com/FuelLabs/fuel-core --branch "$FUEL_CORE_PATCH_BRANCH"
          else
            curl -sSLf https://github.com/FuelLabs/fuel-core/releases/download/v${{ env.FUEL_CORE_VERSION }}/fuel-core-${{ env.FUEL_CORE_VERSION }}-x86_64-unknown-linux-gnu.tar.gz -L -o fuel-core.tar.gz
            tar -xvf fuel-core.tar.gz
            chmod +x fuel-core-${{ env.FUEL_CORE_VERSION }}-x86_64-unknown-linux-gnu/fuel-core
            mv fuel-core-${{ env.FUEL_CORE_VERSION }}-x86_64-unknown-linux-gnu/fuel-core /usr/local/bin/fuel-core
          fi

      - name: Download sway example artifacts (Normal)
        if: ${{ matrix.config.deps.sway_artifacts == 'Normal' }}
        uses: actions/download-artifact@v4
        with:
          name: sway-examples
          # Needed because `upload-artifact` will remove 'e2e/sway' because it is shared between all matched files
          path: e2e/sway/

      - name: Download sway example artifacts (TypePaths)
        if: ${{ matrix.config.deps.sway_artifacts == 'TypePaths' }}
        uses: actions/download-artifact@v4
        with:
          name: sway-examples-w-type-paths
          # Needed because `upload-artifact` will remove 'e2e/sway' because it is shared between all matched files
          path: e2e/sway/

      - name: Install nextest
        if: ${{ matrix.config.deps.cargo.nextest }}
        uses: taiki-e/install-action@nextest

      - name: Install cargo-machete
        if: ${{ matrix.config.deps.cargo.machete }}
        uses: taiki-e/install-action@cargo-machete

      - name: Install NodeJS for WASM testing
        if: ${{ matrix.config.deps.wasm }}
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install wasm toolchain
        if: ${{ matrix.config.deps.wasm }}
        run: |
          rustup target add wasm32-unknown-unknown
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install typos tool
        if: ${{ matrix.config.deps.typos_cli }}
        uses: crate-ci/typos@v1.20.3

      - name: Download checks binary
        uses: actions/download-artifact@v4
        with:
          name: checks-binary
          path: target/debug/checks

      - name: Run checks
        run: ./target/debug/checks --only-tasks-with-ids ${{ matrix.config.tasks }}


  publish:
    needs:
      - cargo-verifications
      - publish-crates-check
    # Only do this job if publishing a release
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Verify tag version
        run: |
          curl -sSLf "$DASEL_VERSION" -L -o dasel && chmod +x dasel
          mv ./dasel /usr/local/bin/dasel
          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} Cargo.toml
      - name: Publish crate
        uses: xgreenx/publish-crates@v1
        with:
          publish-delay: 30000
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
